//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KURSLAB3.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MedicineEntities : DbContext
    {
        public MedicineEntities()
            : base("name=MedicineEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Hospital> Hospital { get; set; }
        public virtual DbSet<Hospital_has_Medicament> Hospital_has_Medicament { get; set; }
        public virtual DbSet<Medicament> Medicament { get; set; }
        public virtual DbSet<Pharmacy> Pharmacy { get; set; }
        public virtual DbSet<Pharmacy_has_Medicament> Pharmacy_has_Medicament { get; set; }
    
        public virtual ObjectResult<firstTask_Result> firstTask(Nullable<int> idPharmacy)
        {
            var idPharmacyParameter = idPharmacy.HasValue ?
                new ObjectParameter("idPharmacy", idPharmacy) :
                new ObjectParameter("idPharmacy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<firstTask_Result>("firstTask", idPharmacyParameter);
        }
    
        public virtual ObjectResult<secondTask_Result> secondTask(Nullable<int> idHospital)
        {
            var idHospitalParameter = idHospital.HasValue ?
                new ObjectParameter("idHospital", idHospital) :
                new ObjectParameter("idHospital", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<secondTask_Result>("secondTask", idHospitalParameter);
        }
    
        public virtual int addHospital(string hospitalAdress)
        {
            var hospitalAdressParameter = hospitalAdress != null ?
                new ObjectParameter("hospitalAdress", hospitalAdress) :
                new ObjectParameter("hospitalAdress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addHospital", hospitalAdressParameter);
        }
    
        public virtual int addHospitalHasMedicament(Nullable<int> hospitalNumber, Nullable<int> idMedicament, Nullable<int> countPackagesMedicament)
        {
            var hospitalNumberParameter = hospitalNumber.HasValue ?
                new ObjectParameter("hospitalNumber", hospitalNumber) :
                new ObjectParameter("hospitalNumber", typeof(int));
    
            var idMedicamentParameter = idMedicament.HasValue ?
                new ObjectParameter("idMedicament", idMedicament) :
                new ObjectParameter("idMedicament", typeof(int));
    
            var countPackagesMedicamentParameter = countPackagesMedicament.HasValue ?
                new ObjectParameter("countPackagesMedicament", countPackagesMedicament) :
                new ObjectParameter("countPackagesMedicament", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addHospitalHasMedicament", hospitalNumberParameter, idMedicamentParameter, countPackagesMedicamentParameter);
        }
    
        public virtual int addMedicament(string nameMedicament, string firmManucacturer)
        {
            var nameMedicamentParameter = nameMedicament != null ?
                new ObjectParameter("nameMedicament", nameMedicament) :
                new ObjectParameter("nameMedicament", typeof(string));
    
            var firmManucacturerParameter = firmManucacturer != null ?
                new ObjectParameter("firmManucacturer", firmManucacturer) :
                new ObjectParameter("firmManucacturer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addMedicament", nameMedicamentParameter, firmManucacturerParameter);
        }
    
        public virtual int addPharmacy(string pharmacylAdress)
        {
            var pharmacylAdressParameter = pharmacylAdress != null ?
                new ObjectParameter("pharmacylAdress", pharmacylAdress) :
                new ObjectParameter("pharmacylAdress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addPharmacy", pharmacylAdressParameter);
        }
    
        public virtual int addPharmacyHasMedicament(Nullable<int> pharmacyNumber, Nullable<int> idMedicament, Nullable<int> priceMedicamentPerPackages, Nullable<int> countPackagesMedicament)
        {
            var pharmacyNumberParameter = pharmacyNumber.HasValue ?
                new ObjectParameter("pharmacyNumber", pharmacyNumber) :
                new ObjectParameter("pharmacyNumber", typeof(int));
    
            var idMedicamentParameter = idMedicament.HasValue ?
                new ObjectParameter("idMedicament", idMedicament) :
                new ObjectParameter("idMedicament", typeof(int));
    
            var priceMedicamentPerPackagesParameter = priceMedicamentPerPackages.HasValue ?
                new ObjectParameter("priceMedicamentPerPackages", priceMedicamentPerPackages) :
                new ObjectParameter("priceMedicamentPerPackages", typeof(int));
    
            var countPackagesMedicamentParameter = countPackagesMedicament.HasValue ?
                new ObjectParameter("countPackagesMedicament", countPackagesMedicament) :
                new ObjectParameter("countPackagesMedicament", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addPharmacyHasMedicament", pharmacyNumberParameter, idMedicamentParameter, priceMedicamentPerPackagesParameter, countPackagesMedicamentParameter);
        }
    
        public virtual int deleteHospital(Nullable<int> hospitalNumber)
        {
            var hospitalNumberParameter = hospitalNumber.HasValue ?
                new ObjectParameter("hospitalNumber", hospitalNumber) :
                new ObjectParameter("hospitalNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteHospital", hospitalNumberParameter);
        }
    
        public virtual int deleteHospitalHasMedicament(Nullable<int> hospitalNumber, Nullable<int> idMedicament)
        {
            var hospitalNumberParameter = hospitalNumber.HasValue ?
                new ObjectParameter("hospitalNumber", hospitalNumber) :
                new ObjectParameter("hospitalNumber", typeof(int));
    
            var idMedicamentParameter = idMedicament.HasValue ?
                new ObjectParameter("idMedicament", idMedicament) :
                new ObjectParameter("idMedicament", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteHospitalHasMedicament", hospitalNumberParameter, idMedicamentParameter);
        }
    
        public virtual int deleteMedicament(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteMedicament", idParameter);
        }
    
        public virtual int deletePharmacy(Nullable<int> pharmacyNumber)
        {
            var pharmacyNumberParameter = pharmacyNumber.HasValue ?
                new ObjectParameter("pharmacyNumber", pharmacyNumber) :
                new ObjectParameter("pharmacyNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deletePharmacy", pharmacyNumberParameter);
        }
    
        public virtual int deletePharmacyHasMedicament(Nullable<int> pharmacylNumber, Nullable<int> idMedicament)
        {
            var pharmacylNumberParameter = pharmacylNumber.HasValue ?
                new ObjectParameter("pharmacylNumber", pharmacylNumber) :
                new ObjectParameter("pharmacylNumber", typeof(int));
    
            var idMedicamentParameter = idMedicament.HasValue ?
                new ObjectParameter("idMedicament", idMedicament) :
                new ObjectParameter("idMedicament", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deletePharmacyHasMedicament", pharmacylNumberParameter, idMedicamentParameter);
        }
    
        public virtual int generateHospital(Nullable<int> count)
        {
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("generateHospital", countParameter);
        }
    
        public virtual int updateHospital(Nullable<int> hospitalNumber, string hospitalAdress)
        {
            var hospitalNumberParameter = hospitalNumber.HasValue ?
                new ObjectParameter("hospitalNumber", hospitalNumber) :
                new ObjectParameter("hospitalNumber", typeof(int));
    
            var hospitalAdressParameter = hospitalAdress != null ?
                new ObjectParameter("hospitalAdress", hospitalAdress) :
                new ObjectParameter("hospitalAdress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateHospital", hospitalNumberParameter, hospitalAdressParameter);
        }
    
        public virtual int updateHospitalHasMedicament(Nullable<int> hospitalNumber, Nullable<int> idMedicament, Nullable<int> countPackages)
        {
            var hospitalNumberParameter = hospitalNumber.HasValue ?
                new ObjectParameter("hospitalNumber", hospitalNumber) :
                new ObjectParameter("hospitalNumber", typeof(int));
    
            var idMedicamentParameter = idMedicament.HasValue ?
                new ObjectParameter("idMedicament", idMedicament) :
                new ObjectParameter("idMedicament", typeof(int));
    
            var countPackagesParameter = countPackages.HasValue ?
                new ObjectParameter("countPackages", countPackages) :
                new ObjectParameter("countPackages", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateHospitalHasMedicament", hospitalNumberParameter, idMedicamentParameter, countPackagesParameter);
        }
    
        public virtual int updateMedicament(Nullable<int> id, string name, string firm)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var firmParameter = firm != null ?
                new ObjectParameter("firm", firm) :
                new ObjectParameter("firm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateMedicament", idParameter, nameParameter, firmParameter);
        }
    
        public virtual int updatePharmacy(Nullable<int> pharmacyNumber, string pharmacyAdress)
        {
            var pharmacyNumberParameter = pharmacyNumber.HasValue ?
                new ObjectParameter("pharmacyNumber", pharmacyNumber) :
                new ObjectParameter("pharmacyNumber", typeof(int));
    
            var pharmacyAdressParameter = pharmacyAdress != null ?
                new ObjectParameter("pharmacyAdress", pharmacyAdress) :
                new ObjectParameter("pharmacyAdress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatePharmacy", pharmacyNumberParameter, pharmacyAdressParameter);
        }
    
        public virtual int updatePharmacyHasMedicament(Nullable<int> pharmacylNumber, Nullable<int> idMedicament, Nullable<int> pricePerPackages, Nullable<int> countPackages)
        {
            var pharmacylNumberParameter = pharmacylNumber.HasValue ?
                new ObjectParameter("pharmacylNumber", pharmacylNumber) :
                new ObjectParameter("pharmacylNumber", typeof(int));
    
            var idMedicamentParameter = idMedicament.HasValue ?
                new ObjectParameter("idMedicament", idMedicament) :
                new ObjectParameter("idMedicament", typeof(int));
    
            var pricePerPackagesParameter = pricePerPackages.HasValue ?
                new ObjectParameter("pricePerPackages", pricePerPackages) :
                new ObjectParameter("pricePerPackages", typeof(int));
    
            var countPackagesParameter = countPackages.HasValue ?
                new ObjectParameter("countPackages", countPackages) :
                new ObjectParameter("countPackages", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatePharmacyHasMedicament", pharmacylNumberParameter, idMedicamentParameter, pricePerPackagesParameter, countPackagesParameter);
        }
    }
}
